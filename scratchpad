#!/bin/bash

name=`basename "$0"`
cmd=$1

if [ -z ${cmd+x} ]
then
  cmd=help
fi

function getRC {
  found=0
  dir=$PWD
  while [ $found -eq 0 ]
  do
    if [ -f $dir/.scratchrc ]
    then
      echo "Found RC file at '$dir/.scratchrc'"$'\n'
      source $dir/.scratchrc
      found=1
    else
      if [ $dir == "/" ]
      then
        found=1
      else
        dir="$(dirname "$dir")"
      fi
    fi
  done
}

getRC

# if [ -f $HOME/.scratchrc ]
# then
#   source $HOME/.scratchrc
# fi

if [ -z ${scratchpadDir+x} ]
then
  scratchpadDir=$HOME/scratchpad
fi

if [ -z ${scratchpadFilename+x} ]
then
  scratchpadFilename=pad.md
fi

function init {
  dir=${1:-$scratchpadDir}
  fil=${2:-$scratchpadFilename}
  if [ -d $dir/.git ]
  then
    echo "Directory '$dir' is already a git repository"
    exit 1
  else
    mkdir -p $dir
    touch $dir/$fil
    cd $dir
    git init > /dev/null
    append 1
    echo "Initialized scratchpad at '$dir/$fil'"
  fi
}

function append {
  cd $scratchpadDir
  last=`git for-each-ref --format='%(refname:short)' | sort -n | tail -1`
  b=${1:-$((last+1))}
  git checkout -b $b > /dev/null 2>&1
  cat /dev/null > $scratchpadFilename
  gam
}

function gam {
  cd $scratchpadDir
  git add -A > /dev/null 2>&1
  git commit -m "scratchpad commit" > /dev/null 2>&1
}

function tag {
  gam
  gb=`git rev-parse --abbrev-ref HEAD`
  if [ -z ${1+x} ]
  then
    echo "Tagged page $gb"
  else
    git symbolic-ref refs/heads/${1} refs/heads/${gb} > /dev/null
    echo "Tagged page $gb as $1"
  fi
}

function flip {
  gam
  if [ -z ${1+x} ]
  then
    append
    gb=`git rev-parse --abbrev-ref HEAD`
    echo "Flipped to page $gb"
  else
    cd $scratchpadDir
    git checkout $1 > /dev/null 2>&1
    gb=`git rev-parse --abbrev-ref HEAD`
    echo "Flipped to page $gb"
  fi
}

function list {
  cd $scratchpadDir
  git branch --list '[[:alpha:]]*' | sort -n -k2
}

function page {
  cd $scratchpadDir
  git branch --list '[[:digit:]]*' | sort -n
}

function pages {
  cd $scratchpadDir
  git branch --list '[[:digit:]]*' | sed 's/*/ /' | sort -n
}

function names {
  cd $scratchpadDir
  git for-each-ref refs/heads/ --format='%(refname:short)' | sort -n | grep '[^0-9]'
}

function copy {
  if [ -z ${1+x} ]
  then
    echo "Missing name for copy"
    exit 1
  else
    cd $scratchpadDir
    git checkout master > /dev/null 2>&1
    git checkout -b $1 > /dev/null 2>&1

    readme="# Outline"
    for p in `pages`;
      do

        readme="${readme}"$'\n'"## Page $p"
        readme="${readme}"$'\n'"- [${scratchpadFilename}](page$p.md)"

        # hash=`git --no-pager log -n 1 ${p} --pretty=format:"%H"`
        # for link in `git for-each-ref refs/heads/ | grep $hash | sed 's/'$hash' commit//' | xargs basename`;
        # do
        #   readme="${readme}"$'\n'"- [${link}](page$p.md#${link})"
        # done

        for name in `names`;
        do
          unset pn
          getPageNumber $name
          if [ "$pn" == $p ]
          then
            readme="${readme}"$'\n'"  - [${name}](page$p.md#${name})"
          fi
        done

        git checkout $p > /dev/null 2>&1
        `mv $scratchpadFilename page$p.md` > /dev/null 2>&1
        git add -A > /dev/null 2>&1
        git commit -m 'copy' > /dev/null 2>&1
        git checkout $1 > /dev/null 2>&1
        git checkout $p page$p.md > /dev/null 2>&1
        git commit -m "copy page '$p'" > /dev/null 2>&1
        git checkout $p > /dev/null 2>&1
        git reset --hard HEAD~1 > /dev/null 2>&1
      done

    # readme="${readme}"$'\n'"# Tags"
    # for name in `names`;
    # do
    #   unset pn
    #   getPageNumber $name
    #   if [ $pn ]
    #   then
    #     readme="${readme}"$'\n'"- [${name}](page$pn.md#${name})"
    #   fi
    # done

    git checkout $1 > /dev/null 2>&1
    echo "$readme" > readme.md

    git add -A > /dev/null 2>&1
    git commit -m 'create readme' > /dev/null 2>&1
    git checkout master > /dev/null 2>&1
    echo "Copied scratchpad to $1"
  fi
}

# only symbolic refs will return a value
function getPageNumber {
  if [[ `git symbolic-ref refs/heads/$1 --short` ]] &>/dev/null
  then
    pn=`git symbolic-ref refs/heads/$1 --short`
  fi
}

function trash {
  if [ -z ${1+x} ]
  then
    echo "Missing page number"
    exit 1
  else
    cd $scratchpadDir
    p=`git rev-parse --abbrev-ref HEAD`
    if [ $p == $1 ]
    then
      echo "Can't trash current page"
      exit 1
    fi
    for name in `names`;
    do
      getPageNumber $name
      if [ $1 == $pn ]
      then
        echo "Removing tag $name"
        git symbolic-ref refs/heads/$name --delete > /dev/null 2>&1
      fi
    done
    git branch -D $1 > /dev/null 2>&1
    echo "Trashed page $1"
  fi
}

if [[ $cmd == "init" ]]
then
  init $2 $3
elif [[ $cmd == "tag" ]]
then
  tag $2
elif [[ $cmd == "flip" ]]
then
  flip $2
elif [[ $cmd == "list" ]]
then
  list
elif [[ $cmd == "page" ]]
then
  page
elif [[ $cmd == "trash" ]]
then
  trash $2
elif [[ $cmd == "copy" ]]
then
  copy $2
else
  # my first heredoc :)
  cat <<- EOM
Missing action, maybe try '$name init'

How to use Scratchpad CLI:

> $name init ~/my-folder
"Initialized scratchpad at '~/my-folder/pad.md'"

> $name flip
"Flipped to page 2"

> $name tag my-first-tag

> $name flip 1
"Flipped to page 1"

> $name trash 2
"Trashed page 2"

EOM
fi
